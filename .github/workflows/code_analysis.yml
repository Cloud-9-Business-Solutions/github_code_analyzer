name: Code Analysis

on:
  workflow_dispatch:
    inputs:
      pattern:
        description: 'Pattern to search for in files (e.g., "*.tf", "src/*.py")'
        required: true
        type: string
      file_pattern:
        description: 'Glob pattern for files to analyze (default: all files)'
        required: false
        type: string
        default: '*'
      contents:
        description: 'Search for specific content within matching files'
        required: false
        type: string
      inclusions:
        description: 'Comma-separated list of repositories to include'
        required: false
        type: string
      exclusions:
        description: 'Comma-separated list of repositories to exclude'
        required: false
        type: string
      preview:
        description: 'Preview mode - analyze only first 10 repositories'
        required: false
        type: boolean
        default: false
      debug:
        description: 'Enable debug output'
        required: false
        type: boolean
        default: false

jobs:
  analyze:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create configuration files
        run: |
          # Create inclusions file if specified
          if [ ! -z "${{ inputs.inclusions }}" ]; then
            mkdir -p inclusions
            echo "repository" > inclusions/repos.csv
            echo "${{ inputs.inclusions }}" | tr ',' '\n' >> inclusions/repos.csv
          fi

          # Create exclusions file if specified
          if [ ! -z "${{ inputs.exclusions }}" ]; then
            mkdir -p exclusions
            echo "repository" > exclusions/repos.csv
            echo "${{ inputs.exclusions }}" | tr ',' '\n' >> exclusions/repos.csv
          fi

          # Create .env file
          cat > .env << EOL
          GH_TOKEN=${{ secrets.GH_TOKEN }}
          GH_ORG=${{ github.organization || github.repository_owner }}
          EOL

      - name: Run code analysis
        run: |
          CMD="python src/main.py --pattern '${{ inputs.pattern }}'"
          
          if [ ! -z "${{ inputs.file_pattern }}" ]; then
            CMD="$CMD --file-pattern '${{ inputs.file_pattern }}'"
          fi
          
          if [ ! -z "${{ inputs.contents }}" ]; then
            CMD="$CMD --contents '${{ inputs.contents }}'"
          fi
          
          if [ "${{ inputs.preview }}" == "true" ]; then
            CMD="$CMD --limit 10"
          fi
          
          if [ "${{ inputs.debug }}" == "true" ]; then
            CMD="$CMD --debug"
          fi
          
          echo "Running command: $CMD"
          eval $CMD

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: code-analysis-results
          path: |
            reports/
            !reports/.gitkeep 